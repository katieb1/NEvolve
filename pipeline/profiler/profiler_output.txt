Shapes:
SNP: torch.Size([2, 10, 10, 1263])
Positions: torch.Size([2, 10, 1263])
Labels: torch.Size([2, 10])

Data:
SNP: tensor([[[[0, 0, 0,  ..., 1, 0, 0],
          [0, 0, 0,  ..., 0, 1, 0],
          [1, 1, 0,  ..., 1, 0, 0],
          ...,
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 1, 0, 0]],

         [[0, 1, 1,  ..., 1, 0, 0],
          [1, 0, 0,  ..., 0, 1, 1],
          [0, 1, 1,  ..., 0, 0, 0],
          ...,
          [0, 1, 1,  ..., 0, 0, 0],
          [1, 0, 0,  ..., 0, 1, 1],
          [1, 0, 0,  ..., 0, 1, 1]],

         [[0, 1, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 0, 1, 1],
          ...,
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 1, 0, 0],
          [0, 0, 0,  ..., 0, 0, 1]],

         ...,

         [[1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          ...,
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1]],

         [[0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 1, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          ...,
          [0, 1, 0,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0]],

         [[0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          ...,
          [1, 0, 0,  ..., 0, 1, 1],
          [0, 0, 0,  ..., 0, 0, 1],
          [0, 0, 0,  ..., 0, 0, 1]]],


        [[[0, 0, 0,  ..., 1, 0, 0],
          [0, 0, 0,  ..., 0, 1, 0],
          [1, 1, 0,  ..., 1, 0, 0],
          ...,
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 1, 0, 0]],

         [[0, 1, 1,  ..., 1, 0, 0],
          [1, 0, 0,  ..., 0, 1, 1],
          [0, 1, 1,  ..., 0, 0, 0],
          ...,
          [0, 1, 1,  ..., 0, 0, 0],
          [1, 0, 0,  ..., 0, 1, 1],
          [1, 0, 0,  ..., 0, 1, 1]],

         [[0, 1, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 0, 1, 1],
          ...,
          [0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 0,  ..., 1, 0, 0],
          [0, 0, 0,  ..., 0, 0, 1]],

         ...,

         [[1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          ...,
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1],
          [1, 0, 0,  ..., 1, 0, 1]],

         [[0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 1, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          ...,
          [0, 1, 0,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0]],

         [[0, 0, 0,  ..., 0, 0, 0],
          [0, 0, 1,  ..., 0, 0, 0],
          [0, 1, 0,  ..., 0, 0, 0],
          ...,
          [1, 0, 0,  ..., 0, 1, 1],
          [0, 0, 0,  ..., 0, 0, 1],
          [0, 0, 0,  ..., 0, 0, 1]]]], device='cuda:0', dtype=torch.uint8)
Positions: tensor([[[2.4000e-03, 3.4000e-03, 5.0000e-03,  ..., 9.9890e-01,
          9.9900e-01, 9.9970e-01],
         [1.0000e-03, 1.1000e-03, 1.2000e-03,  ..., 9.9860e-01,
          9.9890e-01, 9.9920e-01],
         [6.0000e-04, 1.5000e-03, 2.2000e-03,  ..., 9.9880e-01,
          9.9900e-01, 9.9950e-01],
         ...,
         [5.0000e-04, 1.2000e-03, 3.2000e-03,  ..., 9.9580e-01,
          9.9760e-01, 9.9920e-01],
         [1.4000e-03, 1.8000e-03, 1.9000e-03,  ..., 9.9780e-01,
          9.9930e-01, 9.9990e-01],
         [5.0000e-04, 7.0000e-04, 1.7000e-03,  ..., 9.9740e-01,
          9.9800e-01, 9.9970e-01]],

        [[2.4000e-03, 3.4000e-03, 5.0000e-03,  ..., 9.9890e-01,
          9.9900e-01, 9.9970e-01],
         [1.0000e-03, 1.1000e-03, 1.2000e-03,  ..., 9.9860e-01,
          9.9890e-01, 9.9920e-01],
         [6.0000e-04, 1.5000e-03, 2.2000e-03,  ..., 9.9880e-01,
          9.9900e-01, 9.9950e-01],
         ...,
         [5.0000e-04, 1.2000e-03, 3.2000e-03,  ..., 9.9580e-01,
          9.9760e-01, 9.9920e-01],
         [1.4000e-03, 1.8000e-03, 1.9000e-03,  ..., 9.9780e-01,
          9.9930e-01, 9.9990e-01],
         [5.0000e-04, 7.0000e-04, 1.7000e-03,  ..., 9.9740e-01,
          9.9800e-01, 9.9970e-01]]], device='cuda:0', dtype=torch.float64)
Labels: tensor([[0, 1, 2, 0, 1, 2, 0, 1, 2, 3],
        [0, 0, 1, 1, 2, 2, 3, 3, 4, 4]], device='cuda:0', dtype=torch.int32)

Reshaped:
Shapes:
SNP: torch.Size([20, 10, 1263])
Positions: torch.Size([20, 1263])
Labels: torch.Size([20])

Data:
SNP: tensor([[[0, 0, 0,  ..., 1, 0, 0],
         [0, 0, 0,  ..., 0, 1, 0],
         [1, 1, 0,  ..., 1, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 1,  ..., 0, 0, 0],
         [0, 1, 0,  ..., 1, 0, 0]],

        [[0, 1, 1,  ..., 1, 0, 0],
         [1, 0, 0,  ..., 0, 1, 1],
         [0, 1, 1,  ..., 0, 0, 0],
         ...,
         [0, 1, 1,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 1, 1],
         [1, 0, 0,  ..., 0, 1, 1]],

        [[0, 1, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 1, 1],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 1, 0, 0],
         [0, 0, 0,  ..., 0, 0, 1]],

        ...,

        [[1, 0, 0,  ..., 1, 0, 1],
         [1, 0, 0,  ..., 1, 0, 1],
         [1, 0, 0,  ..., 1, 0, 1],
         ...,
         [1, 0, 0,  ..., 1, 0, 1],
         [1, 0, 0,  ..., 1, 0, 1],
         [1, 0, 0,  ..., 1, 0, 1]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 1,  ..., 0, 1, 0],
         [0, 1, 0,  ..., 0, 0, 0],
         ...,
         [0, 1, 0,  ..., 0, 0, 0],
         [0, 1, 0,  ..., 0, 0, 0],
         [0, 1, 0,  ..., 0, 0, 0]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 1,  ..., 0, 0, 0],
         [0, 1, 0,  ..., 0, 0, 0],
         ...,
         [1, 0, 0,  ..., 0, 1, 1],
         [0, 0, 0,  ..., 0, 0, 1],
         [0, 0, 0,  ..., 0, 0, 1]]], device='cuda:0', dtype=torch.uint8)
Positions: tensor([[2.4000e-03, 3.4000e-03, 5.0000e-03,  ..., 9.9890e-01, 9.9900e-01,
         9.9970e-01],
        [1.0000e-03, 1.1000e-03, 1.2000e-03,  ..., 9.9860e-01, 9.9890e-01,
         9.9920e-01],
        [6.0000e-04, 1.5000e-03, 2.2000e-03,  ..., 9.9880e-01, 9.9900e-01,
         9.9950e-01],
        ...,
        [5.0000e-04, 1.2000e-03, 3.2000e-03,  ..., 9.9580e-01, 9.9760e-01,
         9.9920e-01],
        [1.4000e-03, 1.8000e-03, 1.9000e-03,  ..., 9.9780e-01, 9.9930e-01,
         9.9990e-01],
        [5.0000e-04, 7.0000e-04, 1.7000e-03,  ..., 9.9740e-01, 9.9800e-01,
         9.9970e-01]], device='cuda:0', dtype=torch.float64)
Labels: tensor([0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4],
       device='cuda:0', dtype=torch.int32)
         925110 function calls (921806 primitive calls) in 57.921 seconds

   Ordered by: call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   184033    0.056    0.000    0.144    0.000 {built-in method builtins.isinstance}
    79271    0.034    0.000    0.034    0.000 {built-in method builtins.hasattr}
71601/70968    0.020    0.000    0.031    0.000 {built-in method builtins.len}
    49736    0.016    0.000    0.080    0.000 abc.py:137(__instancecheck__)
    49736    0.022    0.000    0.065    0.000 {built-in method _abc._abc_instancecheck}
    33264    0.011    0.000    0.011    0.000 column_accessor.py:47(__getitem__)
    30776    0.014    0.000    0.024    0.000 _collections_abc.py:760(__iter__)
    25352    0.008    0.000    0.008    0.000 column.py:124(__len__)
23478/23474    0.028    0.000    0.070    0.000 dtypes.py:172(is_categorical_dtype)
23422/23414    0.038    0.000    0.047    0.000 dtypes.py:222(is_list_dtype)
    20858    0.022    0.000    0.028    0.000 dtypes.py:233(is_struct_dtype)
    18874    0.003    0.000    0.003    0.000 {built-in method builtins.issubclass}
    18164    0.003    0.000    0.003    0.000 _collections_abc.py:719(__iter__)
15482/15470    0.013    0.000    0.190    0.000 column.py:1537(as_column)
    15414    0.018    0.000    0.112    0.000 utils.py:287(__setitem__)
    15414    0.034    0.000    0.066    0.000 utils.py:298(__setitem__)
    15319    0.004    0.000    0.004    0.000 {built-in method builtins.iter}
    15315    0.003    0.000    0.052    0.000 {built-in method builtins.next}
    15208    0.002    0.000    0.002    0.000 {method 'values' of 'collections.OrderedDict' objects}
    11768    0.005    0.000    0.010    0.000 {built-in method builtins.getattr}
    10532    0.015    0.000    0.024    0.000 common.py:1733(pandas_dtype)
    10326    0.032    0.000    0.032    0.000 {built-in method _functools.reduce}
    10320    0.017    0.000    0.223    0.000 buffer.py:15(__init__)
    10318    0.033    0.000    0.133    0.000 buffer.py:83(_init_from_array_like)
    10318    0.018    0.000    0.052    0.000 buffer.py:133(_buffer_data_from_array_interface)
    10318    0.034    0.000    0.041    0.000 buffer.py:145(confirm_1d_contiguous)
    10318    0.006    0.000    0.007    0.000 buffer.py:156(get_c_contiguity)
    10228    0.003    0.000    0.005    0.000 numerictypes.py:286(issubclass_)
     8590    0.004    0.000    0.007    0.000 generic.py:10(_check)
     7804    0.105    0.000    0.105    0.000 column.py:48(__init__)
     7804    0.036    0.000    0.211    0.000 column.py:1401(build_column)
     7754    0.015    0.000    0.119    0.000 numerical.py:23(__init__)
     5184    0.001    0.000    0.001    0.000 string.py:4800(__len__)
     5120    0.013    0.000    0.013    0.000 column_accessor.py:120(_clear_cache)
     5114    0.006    0.000    0.011    0.000 numerictypes.py:360(issubdtype)
     2861    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
     2830    0.003    0.000    0.004    0.000 base.py:413(find)
     2752    0.004    0.000    0.017    0.000 base.py:256(is_dtype)
     2722    0.001    0.000    0.002    0.000 inference.py:322(is_hashable)
     2722    0.001    0.000    0.001    0.000 {built-in method builtins.hash}
     2668    0.003    0.000    0.019    0.000 common.py:530(is_categorical_dtype)
     2562    0.001    0.000    0.001    0.000 column_accessor.py:314(_pad_key)
     2556    0.011    0.000    0.272    0.000 column.py:994(astype)
     2550    0.002    0.000    0.042    0.000 column_accessor.py:50(__setitem__)
     2550    0.004    0.000    0.033    0.000 column_accessor.py:246(set_by_label)
     2540    0.015    0.000    0.044    0.000 numerical.py:175(as_numerical_column)
     1812    0.003    0.000    0.054    0.000 {method 'format' of 'str' objects}
     1344    0.001    0.000    0.002    0.000 sre_parse.py:164(__getitem__)
     1216    0.001    0.000    0.001    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
     1107    0.001    0.000    0.001    0.000 {built-in method builtins.max}
     1093    0.001    0.000    0.003    0.000 <frozen importlib._bootstrap>:1009(_handle_fromlist)
      872    0.001    0.000    0.001    0.000 sre_parse.py:233(__next)
    802/6    0.004    0.000    0.425    0.071 tensor.py:528(__format__)
      798    0.129    0.000    0.129    0.000 {method 'item' of 'torch._C._TensorBase' objects}
      796    0.001    0.000    0.003    0.000 _tensor_str.py:137(format)
      796    0.001    0.000    0.003    0.000 _tensor_str.py:173(_val_formatter)
      688    0.001    0.000    0.001    0.000 {method '__format__' of 'int' objects}
      636    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      628    0.001    0.000    0.001    0.000 sre_parse.py:254(get)
      494    0.000    0.000    0.001    0.000 sre_parse.py:249(match)
      442    0.000    0.000    0.000    0.000 _collections_abc.py:698(__init__)
      437    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
   432/92    0.000    0.000    0.043    0.000 abc.py:141(__subclasscheck__)
   432/92    0.042    0.000    0.043    0.000 {built-in method _abc._abc_subclasscheck}
      428    0.001    0.000    0.001    0.000 column_accessor.py:44(__iter__)
      363    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
      360    0.000    0.000    0.001    0.000 common.py:1600(_is_dtype_type)
      352    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      332    0.000    0.000    0.000    0.000 column_accessor.py:58(__len__)
      331    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      307    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
      269    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
      264    0.001    0.000    0.001    0.000 sre_parse.py:111(__init__)
   263/26    0.001    0.000    0.002    0.000 sre_parse.py:174(getwidth)
      256    0.021    0.000    0.021    0.000 {method 'tolist' of 'torch._C._TensorBase' objects}
    241/4    0.002    0.000    0.005    0.001 sre_compile.py:71(_compile)
      230    0.000    0.000    0.001    0.000 _collections_abc.py:672(keys)
      224    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
      220    0.000    0.000    0.000    0.000 common.py:188(<lambda>)
      220    0.000    0.000    0.000    0.000 common.py:183(classes_and_not_datetimelike)
      218    0.001    0.000    0.020    0.000 utils.py:273(__get__)
      215    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
      208    0.000    0.000    0.001    0.000 _collections_abc.py:701(__len__)
      206    0.007    0.000    0.099    0.000 column_accessor.py:16(__init__)
      204    0.000    0.000    0.001    0.000 common.py:1565(_get_dtype)
      198    0.000    0.000    0.000    0.000 _collections_abc.py:680(values)
      196    0.000    0.000    0.001    0.000 common.py:1460(is_extension_array_dtype)
    178/4    0.004    0.000    0.012    0.003 sre_parse.py:469(_parse)
      178    0.000    0.000    0.001    0.000 common.py:566(is_string_dtype)
      178    0.000    0.000    0.001    0.000 common.py:1541(_is_dtype)
  172/144    0.001    0.000    0.029    0.000 dataframe.py:586(__setattr__)
      166    0.000    0.000    0.000    0.000 {cudf._lib.scalar._is_null_host_scalar}
      164    0.000    0.000    0.000    0.000 index.py:1510(name)
    156/6    0.001    0.000    0.029    0.005 _tensor_str.py:198(_tensor_str_with_formatter)
      152    0.001    0.000    0.002    0.000 dtypes.py:280(is_scalar)
    152/4    0.004    0.000    0.047    0.012 _tensor_str.py:260(get_summarized_data)
      140    0.000    0.000    0.000    0.000 common.py:180(<lambda>)
      140    0.000    0.000    0.000    0.000 common.py:178(classes)
      136    0.000    0.000    0.000    0.000 common.py:595(condition)
      132    0.000    0.000    0.001    0.000 common.py:456(is_period_dtype)
      132    0.000    0.000    0.001    0.000 common.py:492(is_interval_dtype)
      129    0.000    0.000    0.000    0.000 {built-in method math.floor}
      129    0.000    0.000    0.000    0.000 _tensor_str.py:134(width)
      129    0.000    0.000    0.000    0.000 _tensor_str.py:191(<listcomp>)
      129    0.000    0.000    0.000    0.000 _tensor_str.py:192(<listcomp>)
      129    0.008    0.000    0.025    0.000 _tensor_str.py:163(_vector_str)
      126    0.027    0.000    0.027    0.000 {built-in method cat}
      126    0.000    0.000    0.002    0.000 _tensor_str.py:185(<listcomp>)
      126    0.000    0.000    0.002    0.000 _tensor_str.py:187(<listcomp>)
      124    0.000    0.000    0.000    0.000 common.py:422(is_timedelta64_dtype)
      124    0.000    0.000    0.000    0.000 common.py:905(is_datetime64_any_dtype)
      115    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55f7b96a58e0}
      114    0.001    0.000    0.003    0.000 column_accessor.py:101(names)
      108    0.004    0.000    0.004    0.000 {method '__format__' of 'float' objects}
      106    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      102    0.000    0.000    0.000    0.000 dataframe.py:2477(index)
   100/96    0.001    0.000    0.001    0.000 {built-in method numpy.array}
       98    0.000    0.000    0.001    0.000 dtypes.py:152(is_string_dtype)
       96    0.001    0.000    0.005    0.000 dtypes.py:298(to_cudf_compatible_scalar)
       96    0.000    0.000    0.004    0.000 scalar.py:15(__init__)
       96    0.001    0.000    0.001    0.000 tensor.py:567(__len__)
       92    0.000    0.000    0.000    0.000 contextlib.py:58(_recreate_cm)
    92/44    0.001    0.000   55.439    1.260 contextlib.py:71(inner)
       92    0.000    0.000    0.000    0.000 nvtx.py:81(__enter__)
       92    0.001    0.000    0.001    0.000 nvtx.py:85(__exit__)
       92    0.000    0.000    0.000    0.000 {nvtx._lib.lib.pop_range}
       92    0.000    0.000    0.000    0.000 {nvtx._lib.lib.push_range}
       85    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       82    0.000    0.000    0.000    0.000 base.py:5656(maybe_extract_name)
       80    0.000    0.000    0.001    0.000 common.py:1223(is_numeric_dtype)
       80    0.001    0.000    0.010    0.000 column_accessor.py:105(columns)
       76    0.000    0.000    0.000    0.000 numeric.py:1816(isscalar)
       72    0.000    0.000    0.001    0.000 series.py:366(name)
       71    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       70    0.000    0.000    0.000    0.000 dtypes.py:906(is_dtype)
       70    0.000    0.000    0.001    0.000 dtypes.py:1119(is_dtype)
    68/64    0.000    0.000    0.001    0.000 _asarray.py:14(asarray)
       68    0.000    0.000    0.004    0.000 scalar.py:106(_preprocess_host_value)
       66    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
       66    0.000    0.000    0.000    0.000 index.py:2782(_setdefault_name)
       65    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
    62/22    0.002    0.000    0.009    0.000 base.py:293(__new__)
       60    0.000    0.000    0.000    0.000 common.py:1296(is_float_dtype)
       60    0.000    0.000    0.001    0.000 common.py:218(asarray_tuplesafe)
       58    0.001    0.000    0.001    0.000 sre_compile.py:276(_optimize_charset)
       58    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
       58    0.000    0.000    0.000    0.000 common.py:696(is_integer_dtype)
       58    0.000    0.000    0.000    0.000 index.py:1618(__len__)
       56    0.000    0.000    0.000    0.000 sre_parse.py:408(_uniq)
       56    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       56    0.000    0.000    0.000    0.000 scalar.py:65(_is_host_value_current)
       56    0.000    0.000    0.002    0.000 scalar.py:81(value)
       56    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       54    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.generic' objects}
       54    0.000    0.000    0.007    0.000 index.py:1559(_data)
       54    0.000    0.000    0.002    0.000 index.py:2697(as_index)
       54    0.000    0.000    0.001    0.000 series.py:214(_column)
       52    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
       50    0.000    0.000    0.000    0.000 {function StringColumn.set_base_data at 0x2b72805a33b0}
       50    0.000    0.000    0.000    0.000 {function StringColumn.set_base_mask at 0x2b72805a3440}
       50    0.000    0.000    0.000    0.000 {function StringColumn.set_base_children at 0x2b72805a34d0}
       50    0.008    0.000    0.009    0.000 string.py:4654(__init__)
       50    0.000    0.000    0.000    0.000 string.py:4772(set_base_data)
       50    0.000    0.000    0.000    0.000 string.py:4781(set_base_mask)
       50    0.000    0.000    0.000    0.000 string.py:4784(set_base_children)
     49/4    0.001    0.000    0.012    0.003 sre_parse.py:411(_parse_sub)
       48    0.000    0.000    0.001    0.000 common.py:1330(is_bool_dtype)
       42    0.000    0.000    0.000    0.000 common.py:750(is_signed_integer_dtype)
       42    0.000    0.000    0.000    0.000 column_accessor.py:72(level_names)
       42    0.000    0.000    0.000    0.000 index.py:367(name)
       40    0.000    0.000    0.000    0.000 common.py:806(is_unsigned_integer_dtype)
       40    0.003    0.000    0.003    0.000 scalar.py:73(device_value)
       38    0.003    0.000    0.009    0.000 {cudf._lib.scalar.as_device_scalar}
       37    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
       36    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
       35    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       34    0.000    0.000    0.000    0.000 _collections_abc.py:742(__iter__)
       34    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
       33    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       32    0.003    0.000    0.003    0.000 {pandas._libs.lib.is_list_like}
       30    0.000    0.000    0.002    0.000 series.py:107(__init__)
       30    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       29    0.114    0.004    0.114    0.004 {built-in method stack}
       29    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       29    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       28    0.000    0.000    0.000    0.000 _collections_abc.py:664(__contains__)
       28    0.000    0.000    0.018    0.001 re.py:273(_compile)
       28    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       28    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       28    0.000    0.000    0.000    0.000 _dtype.py:321(_name_get)
       28    0.000    0.000    0.000    0.000 base.py:544(_reset_identity)
       28    0.001    0.000    0.002    0.000 {method '_to_host_scalar' of 'cudf._lib.scalar.DeviceScalar' objects}
       28    0.000    0.000    0.000    0.000 column_accessor.py:79(nlevels)
       28    0.000    0.000    0.000    0.000 index.py:91(__init__)
       28    0.000    0.000    0.000    0.000 index.py:1487(__new__)
       28    0.000    0.000    0.002    0.000 scalar.py:103(_device_value_to_host)
       28    0.000    0.000    0.000    0.000 scalar.py:164(__bool__)
       28    0.000    0.000    0.000    0.000 scalar.py:252(_binop_result_dtype_or_error)
       28    0.000    0.000    0.018    0.001 scalar.py:283(_scalar_binop)
       28    0.013    0.000    0.015    0.001 scalar.py:298(_dispatch_scalar_binop)
       26    0.000    0.000    0.031    0.001 dataframe.py:112(__init__)
       26    0.000    0.000    0.000    0.000 dataframe.py:868(__len__)
       26    0.000    0.000    0.000    0.000 index.py:1887(_values)
       24    0.000    0.000    0.000    0.000 sre_parse.py:343(_escape)
       24    0.001    0.000    0.001    0.000 {pandas._libs.lib.infer_dtype}
       24    0.000    0.000    0.000    0.000 base.py:3870(_values)
    24/15    0.001    0.000    0.022    0.001 _tensor_str.py:208(<listcomp>)
    24/15    0.001    0.000    0.016    0.001 _tensor_str.py:211(<listcomp>)
       24    0.001    0.000    0.001    0.000 _tensor_str.py:270(<listcomp>)
       24    0.001    0.000    0.001    0.000 _tensor_str.py:271(<listcomp>)
     24/6    0.000    0.000    0.035    0.006 _tensor_str.py:273(<listcomp>)
       24    0.000    0.000    0.000    0.000 grad_mode.py:166(__init__)
       24    0.000    0.000    0.000    0.000 {built-in method torch._C._set_grad_enabled}
       22    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
       22    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
       22    0.000    0.000    0.002    0.000 sre_parse.py:96(closegroup)
       22    0.000    0.000    0.000    0.000 managers.py:1575(_block)
       22    0.000    0.000    0.000    0.000 base.py:463(_simple_new)
       22    0.000    0.000    0.001    0.000 column.py:506(copy)
       22    0.000    0.000    0.004    0.000 dataframe.py:2483(index)
       22    0.000    0.000    0.000    0.000 index.py:1682(dtype)
       20    0.000    0.000    0.018    0.001 re.py:234(compile)
       20    0.000    0.000    0.000    0.000 base.py:201(construct_from_string)
       20    0.000    0.000    0.000    0.000 base.py:5672(_maybe_cast_with_dtype)
       20    0.000    0.000    0.001    0.000 base.py:5726(_maybe_cast_data_without_dtype)
       20    0.000    0.000    0.000    0.000 column_accessor.py:88(name)
       20    0.000    0.000    0.010    0.000 column_accessor.py:128(to_pandas_index)
       20    0.000    0.000    0.000    0.000 index.py:1926(__len__)
       20    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
       19    0.000    0.000    0.004    0.000 __init__.py:374(__getattr__)
       19    0.004    0.000    0.004    0.000 __init__.py:381(__getitem__)
    19/18    0.000    0.000    0.000    0.000 dataloader.py:329(__setattr__)
       19    0.073    0.004    0.073    0.004 {built-in method posix.stat}
       18    0.000    0.000    0.018    0.001 tokenize.py:487(_tokenize)
       18    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       18    0.000    0.000    0.000    0.000 common.py:194(is_object_dtype)
       18    0.025    0.001    0.026    0.001 {cudf._lib.filling.sequence}
       18    0.074    0.004    0.107    0.006 column.py:2025(arange)
       18    0.004    0.000    0.019    0.001 frame.py:2135(_copy_categories)
       18    0.004    0.000    0.020    0.001 frame.py:2183(_copy_struct_names)
       18    0.000    0.000    0.039    0.002 frame.py:2208(_postprocess_columns)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       17    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 _collections_abc.py:716(__contains__)
       16    0.000    0.000    0.000    0.000 types.py:164(__get__)
       16    0.000    0.000    0.000    0.000 enum.py:633(value)
       16    0.000    0.000    0.017    0.001 tokenize.py:147(_compile)
       16    0.000    0.000    0.000    0.000 tokenize.py:225(add_whitespace)
       16    0.000    0.000    0.000    0.000 dummyarray.py:110(<genexpr>)
       16    0.000    0.000    0.000    0.000 utils.py:281(stringify_path)
       16    0.000    0.000    0.003    0.000 dataframe.py:471(_from_table)
       16    0.029    0.002    0.559    0.035 dataframe.py:616(__getitem__)
       16    0.000    0.000    0.000    0.000 frame.py:202(__len__)
       16    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
       16    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
       15    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
       15    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       14    0.000    0.000    0.000    0.000 _collections_abc.py:676(items)
       14    0.000    0.000    0.000    0.000 dtypes.py:346(is_list_like)
       14    0.003    0.000    0.006    0.000 column_accessor.py:198(select_by_label)
       14    0.000    0.000    0.000    0.000 utils.py:347(_inner)
       14    0.239    0.017    0.352    0.025 {cudf._lib.copying.gather}
       14    0.000    0.000    0.006    0.000 dataframe.py:2426(columns)
       14    0.000    0.000    0.009    0.001 frame.py:477(_get_columns_by_label)
       14    0.006    0.000    0.379    0.027 frame.py:507(_gather)
       14    0.000    0.000    0.000    0.000 series.py:392(_copy_construct_defaults)
       14    0.000    0.000    0.001    0.000 series.py:395(_copy_construct)
       14    0.000    0.000    0.000    0.000 series.py:2132(index)
       14    0.000    0.000    0.016    0.001 scalar.py:213(__lt__)
       14    0.000    0.000    0.002    0.000 scalar.py:216(__ge__)
       14    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
       14    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:58(<listcomp>)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:56(_path_join)
       13    0.000    0.000    0.000    0.000 sre_parse.py:295(_class_escape)
       13    0.000    0.000    0.000    0.000 __init__.py:1614(isEnabledFor)
       12    0.000    0.000    0.000    0.000 __init__.py:1356(debug)
       12    0.000    0.000    0.000    0.000 blocks.py:201(internal_values)
       12    0.000    0.000    0.000    0.000 managers.py:1613(internal_values)
       12    0.001    0.000    0.001    0.000 driver.py:298(safe_cuda_api_call)
       12    0.000    0.000    0.000    0.000 driver.py:326(_check_error)
       12    0.000    0.000    0.000    0.000 common.py:150(ensure_python_int)
       12    0.000    0.000    0.000    0.000 common.py:194(<genexpr>)
       12    0.000    0.000    0.000    0.000 base.py:1032(__iter__)
       12    0.000    0.000    0.000    0.000 base.py:567(__len__)
       12    0.000    0.000    0.000    0.000 range.py:687(__len__)
       12    0.000    0.000    0.000    0.000 series.py:540(_values)
       12    0.000    0.000    0.000    0.000 column_accessor.py:109(_grouped_data)
       12    0.000    0.000    0.000    0.000 column_accessor.py:145(insert)
       12    0.052    0.004    0.052    0.004 {cudf._lib.reduce.reduce}
       12    0.000    0.000    0.001    0.000 column.py:76(as_frame)
       12    0.003    0.000    0.055    0.005 column.py:182(all)
       12    0.025    0.002    0.140    0.012 string.py:4813(as_numerical_column)
       12    0.000    0.000    0.001    0.000 dataframe.py:2964(insert)
       12    0.000    0.000    0.000    0.000 index.py:1415(_from_table)
       12    0.000    0.000    0.006    0.001 index.py:1550(_values)
       12    0.000    0.000    0.000    0.000 tensor.py:24(<genexpr>)
       12    0.000    0.000    0.000    0.000 _jit_internal.py:750(is_scripting)
       12    0.000    0.000    0.000    0.000 grad_mode.py:80(__init__)
       12    0.000    0.000    0.000    0.000 grad_mode.py:85(__enter__)
       12    0.000    0.000    0.000    0.000 grad_mode.py:89(__exit__)
       12    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       12    0.000    0.000    0.000    0.000 {built-in method torch._C.get_default_dtype}
       12    0.000    0.000    0.000    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
       11    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}
       11    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
       11    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
       11    0.071    0.006    0.071    0.006 {method 'reshape' of 'torch._C._TensorBase' objects}
       10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
       10    0.000    0.000    0.022    0.002 <frozen importlib._bootstrap_external>:74(_path_stat)
       10    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       10    0.000    0.000    0.000    0.000 functools.py:37(update_wrapper)
       10    0.000    0.000    0.000    0.000 functools.py:67(wraps)
       10    0.000    0.000    0.000    0.000 generic.py:5123(__getattr__)
       10    0.000    0.000    0.000    0.000 driver.py:297(_wrap_api_call)
       10    0.000    0.000    0.004    0.000 driver.py:305(_find_api)
       10    0.000    0.000    0.000    0.000 common.py:608(is_dtype_equal)
       10    0.000    0.000    0.000    0.000 series.py:442(name)
       10    0.000    0.000    0.000    0.000 column_accessor.py:266(_select_by_label_grouped)
       10    0.000    0.000    0.000    0.000 string.py:4753(base_size)
       10    0.016    0.002    0.016    0.002 {cudf._lib.string_casting.stod}
       10    0.001    0.000    0.002    0.000 {cudf._lib.strings.char_types.is_float}
       10    0.000    0.000    0.000    0.000 dataframe.py:516(_constructor_sliced)
       10    0.000    0.000    0.014    0.001 tensor.py:576(__iter__)
       10    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       10    0.008    0.001    0.008    0.001 {method 'unbind' of 'torch._C._TensorBase' objects}
       10    0.006    0.001    0.006    0.001 {built-in method torch._C._get_tracing_state}
        9    0.000    0.000    0.000    0.000 sre_compile.py:413(<listcomp>)
        9    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
      9/8    0.000    0.000    0.007    0.001 driver.py:271(__getattr__)
        9    0.000    0.000    0.000    0.000 __init__.py:107(is_initialized)
        9    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        9    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        9    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:321(<genexpr>)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1325(<genexpr>)
        8    0.000    0.000    0.000    0.000 posixpath.py:232(expanduser)
        8    0.000    0.000    0.000    0.000 _collections_abc.py:790(pop)
        8    0.000    0.000    0.001    0.000 re.py:172(match)
        8    0.000    0.000    0.000    0.000 enum.py:289(__call__)
        8    0.000    0.000    0.000    0.000 enum.py:531(__new__)
        8    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        8    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        8    0.000    0.000    0.000    0.000 blocks.py:315(dtype)
        8    0.000    0.000    0.000    0.000 managers.py:1602(dtype)
        8    0.000    0.000    0.000    0.000 driver.py:1626(device_ctypes_pointer)
        8    0.000    0.000    0.000    0.000 devicearray.py:190(device_ctypes_pointer)
        8    0.000    0.000    0.000    0.000 dummyarray.py:81(get_offset)
        8    0.000    0.000    0.000    0.000 dummyarray.py:105(is_contiguous)
        8    0.000    0.000    0.000    0.000 dummyarray.py:109(compute_index)
        8    0.000    0.000    0.000    0.000 dummyarray.py:162(<genexpr>)
        8    0.000    0.000    0.000    0.000 dummyarray.py:163(<genexpr>)
        8    0.000    0.000    0.000    0.000 dummyarray.py:181(is_contig)
        8    0.000    0.000    0.000    0.000 common.py:603(<genexpr>)
        8    0.000    0.000    0.000    0.000 numeric.py:81(_validate_dtype)
        8    0.000    0.000    0.000    0.000 series.py:427(dtype)
        8    0.000    0.000    0.000    0.000 column_accessor.py:54(__delitem__)
        8    0.000    0.000    0.000    0.000 column_accessor.py:94(nrows)
        8    0.000    0.000    0.000    0.000 column_accessor.py:182(copy)
        8    0.000    0.000    0.154    0.019 column.py:591(__getitem__)
        8    0.000    0.000    0.154    0.019 column.py:825(take)
        8    0.000    0.000    0.002    0.000 dataframe.py:420(_init_from_dict_like)
        8    0.000    0.000    0.000    0.000 dataframe.py:488(<listcomp>)
        8    0.000    0.000    0.000    0.000 dataframe.py:483(_align_input_series_indices)
        8    0.000    0.000    0.003    0.000 dataframe.py:2935(copy)
        8    0.000    0.000    0.000    0.000 frame.py:40(_from_table)
        8    0.000    0.000    0.000    0.000 frame.py:533(_as_column)
        8    0.000    0.000    0.000    0.000 index.py:374(name)
        8    0.000    0.000    0.000    0.000 series.py:1718(dtype)
      8/5    0.000    0.000    0.042    0.008 __init__.py:140(_lazy_init)
        8    0.000    0.000    0.000    0.000 join.py:527(_build_output_col)
        8    0.000    0.000    0.000    0.000 {method 'copy' of 'collections.OrderedDict' objects}
        8    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        8    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      7/1    0.000    0.000    0.000    0.000 ast.py:64(_convert)
        7    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_r_long)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:855(__enter__)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:859(__exit__)
        6    0.000    0.000    0.022    0.004 <frozen importlib._bootstrap_external>:84(_path_is_mode_type)
        6    0.000    0.000    0.000    0.000 posixpath.py:75(join)
        6    0.000    0.000    0.000    0.000 genericpath.py:27(isfile)
        6    0.000    0.000    0.000    0.000 __init__.py:212(_acquireLock)
        6    0.000    0.000    0.000    0.000 __init__.py:221(_releaseLock)
        6    0.000    0.000    0.000    0.000 generic.py:5141(__setattr__)
        6    0.000    0.000    0.006    0.001 blocks.py:124(__init__)
        6    0.000    0.000    0.000    0.000 blocks.py:135(_check_ndim)
        6    0.000    0.000    0.000    0.000 blocks.py:233(mgr_locs)
        6    0.006    0.001    0.006    0.001 blocks.py:237(mgr_locs)
        6    0.000    0.000    0.000    0.000 blocks.py:2655(get_block_type)
        6    0.000    0.000    0.007    0.001 blocks.py:2701(make_block)
        6    0.000    0.000    0.000    0.000 managers.py:1532(__init__)
        6    0.000    0.000    0.007    0.001 managers.py:1564(from_array)
        6    0.000    0.000    0.000    0.000 devices.py:177(_get_attached_context)
        6    0.000    0.000    0.000    0.000 common.py:224(is_sparse)
        6    0.000    0.000    0.000    0.000 common.py:381(is_datetime64tz_dtype)
        6    0.011    0.002    0.028    0.005 cast.py:1201(maybe_infer_to_datetimelike)
        6    0.000    0.000    0.028    0.005 cast.py:1310(maybe_cast_to_datetime)
        6    0.000    0.000    0.000    0.000 construction.py:339(extract_array)
        6    0.000    0.000    0.031    0.005 construction.py:390(sanitize_array)
        6    0.000    0.000    0.000    0.000 construction.py:580(is_empty_data)
        6    0.000    0.000    0.000    0.000 common.py:190(all_none)
        6    0.000    0.000    0.000    0.000 base.py:1175(name)
        6    0.000    0.000    0.000    0.000 base.py:1182(name)
        6    0.000    0.000    0.000    0.000 base.py:1213(_get_names)
        6    0.000    0.000    0.000    0.000 base.py:5650(default_index)
        6    0.000    0.000    0.000    0.000 numeric.py:150(is_all_dates)
        6    0.000    0.000    0.000    0.000 range.py:86(__new__)
        6    0.000    0.000    0.000    0.000 range.py:134(_simple_new)
        6    0.000    0.000    0.039    0.007 series.py:201(__init__)
        6    0.000    0.000    0.000    0.000 series.py:398(_set_axis)
        6    0.000    0.000    0.000    0.000 series.py:492(name)
        6    0.000    0.000    0.000    0.000 generic.py:195(__init__)
        6    0.037    0.006    0.037    0.006 {pyarrow.lib.table}
        6    0.097    0.016    0.097    0.016 {pyarrow.lib.array}
        6    0.004    0.001    0.005    0.001 {cudf._lib.interop.from_arrow}
        6    0.016    0.003    0.058    0.010 column.py:345(from_arrow)
        6    0.000    0.000    0.000    0.000 dataframe.py:512(_constructor)
        6    0.000    0.000    0.000    0.000 dataframe.py:566(shape)
        6    0.001    0.000    0.022    0.004 dataframe.py:2433(columns)
        6    0.000    0.000    0.000    0.000 index.py:347(names)
        6    0.000    0.000    0.000    0.000 index.py:354(names)
        6    0.000    0.000    0.000    0.000 index.py:1574(copy)
        6    0.000    0.000    0.000    0.000 index.py:1866(_initialize)
        6    0.000    0.000    0.001    0.000 index.py:2058(__new__)
        6    0.000    0.000    0.000    0.000 index.py:2090(__init__)
        6    0.000    0.000    0.425    0.071 tensor.py:173(__repr__)
        6    0.039    0.006    0.348    0.058 _tensor_str.py:74(__init__)
        6    0.000    0.000    0.424    0.071 _tensor_str.py:220(_tensor_str)
        6    0.000    0.000    0.000    0.000 _tensor_str.py:244(_add_suffixes)
        6    0.000    0.000    0.425    0.071 _tensor_str.py:277(_str_intern)
        6    0.000    0.000    0.425    0.071 _tensor_str.py:370(_str)
        6    0.000    0.000    0.000    0.000 __init__.py:46(is_available)
        6    0.000    0.000    0.000    0.000 overrides.py:1084(<genexpr>)
        6    0.000    0.000    0.000    0.000 join.py:412(libcudf_to_output_casting_rules)
        6    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        6    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
        6    0.000    0.000    0.425    0.071 {function Tensor.__format__ at 0x2b7303fb55f0}
        6    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        6    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {built-in method torch._C._get_default_device}
        6    0.000    0.000    0.000    0.000 {method 'double' of 'torch._C._TensorBase' objects}
        5    0.000    0.000    0.022    0.004 <frozen importlib._bootstrap_external>:93(_path_isfile)
        5    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        5    0.002    0.000    0.002    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        5    0.000    0.000    0.000    0.000 registry.py:37(__contains__)
        5    0.000    0.000    0.000    0.000 __init__.py:338(device_count)
        5    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
        5    0.003    0.001    0.003    0.001 {built-in method torch._C._cuda_isInBadFork}
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:403(cached)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_split)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:271(cache_from_source)
        4    0.000    0.000    0.000    0.000 _collections_abc.py:72(_check_methods)
        4    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
        4    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
        4    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
        4    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
        4    0.000    0.000    0.000    0.000 enum.py:841(__and__)
        4    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
        4    0.000    0.000    0.006    0.001 sre_compile.py:598(_code)
        4    0.000    0.000    0.018    0.005 sre_compile.py:759(compile)
        4    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        4    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
        4    0.000    0.000    0.000    0.000 sre_parse.py:897(fix_flags)
        4    0.000    0.000    0.012    0.003 sre_parse.py:913(parse)
        4    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(copyto)
        4    0.000    0.000    0.002    0.001 numeric.py:268(full)
        4    0.000    0.000    0.000    0.000 <string>:1(__new__)
        4    0.000    0.000    0.000    0.000 {method 'hexdigest' of '_hashlib.HASH' objects}
        4    0.022    0.006    0.022    0.006 {built-in method _hashlib.openssl_sha256}
        4    0.000    0.000    0.000    0.000 typing.py:814(__new__)
        4    0.000    0.000    0.006    0.002 blocks.py:2374(__init__)
        4    0.000    0.000    0.000    0.000 driver.py:372(get_active_context)
        4    0.002    0.000    0.008    0.002 driver.py:387(__enter__)
        4    0.000    0.000    0.000    0.000 driver.py:413(__exit__)
        4    0.000    0.000    0.000    0.000 driver.py:2200(device_memory_size)
        4    0.000    0.000    0.009    0.002 devices.py:110(ensure_context)
        4    0.000    0.000    0.000    0.000 devices.py:130(get_or_create_context)
        4    0.000    0.000    0.000    0.000 devices.py:180(_set_attached_context)
        4    0.000    0.000    0.000    0.000 devicearray.py:65(__init__)
        4    0.000    0.000    0.000    0.000 devicearray.py:118(__cuda_array_interface__)
        4    0.000    0.000    0.000    0.000 devicearray.py:714(is_contiguous)
        4    0.000    0.000    0.000    0.000 dummyarray.py:43(__init__)
        4    0.000    0.000    0.000    0.000 dummyarray.py:149(from_desc)
        4    0.000    0.000    0.000    0.000 dummyarray.py:159(__init__)
        4    0.000    0.000    0.000    0.000 dummyarray.py:169(_compute_layout)
        4    0.000    0.000    0.000    0.000 dummyarray.py:195(<listcomp>)
        4    0.000    0.000    0.000    0.000 dummyarray.py:193(_compute_extent)
        4    0.000    0.000    0.000    0.000 buffer.py:67(__cuda_array_interface__)
        4    0.013    0.003    0.013    0.003 {pandas._libs.algos.ensure_object}
        4    0.000    0.000    0.002    0.001 {pandas._libs.lib.maybe_convert_objects}
        4    0.004    0.001    0.004    0.001 {pandas._libs.lib.infer_datetimelike_array}
        4    0.000    0.000    0.002    0.001 cast.py:88(maybe_convert_platform)
        4    0.000    0.000    0.000    0.000 cast.py:1570(construct_1d_object_array_from_listlike)
        4    0.000    0.000    0.000    0.000 common.py:274(maybe_iterable_to_list)
        4    0.000    0.000    0.000    0.000 column_accessor.py:261(<dictcomp>)
        4    0.000    0.000    0.000    0.000 column_accessor.py:259(_select_by_label_list_like)
        4    0.000    0.000    0.000    0.000 utils.py:358(<dictcomp>)
        4    0.000    0.000    0.000    0.000 utils.py:341(to_flat_dict)
        4    0.021    0.005    0.042    0.011 {cudf._lib.interop.to_dlpack}
        4    0.095    0.024    0.097    0.024 {built-in method cudf._lib.join.join}
        4    0.000    0.000    0.000    0.000 {cudf._lib.join.compute_result_col_names}
        4    0.023    0.006    0.024    0.006 {cudf._lib.sort.order_by}
        4    0.000    0.000    0.171    0.043 column.py:983(sort_by_values)
        4    0.000    0.000    0.000    0.000 spec.py:48(<genexpr>)
        4    0.000    0.000    0.023    0.006 spec.py:46(__call__)
        4    0.000    0.000    0.000    0.000 spec.py:145(_fs_token)
        4    0.000    0.000    0.000    0.000 spec.py:180(_get_kwargs_from_urls)
        4    0.000    0.000    0.000    0.000 utils.py:93(update_storage_options)
        4    0.000    0.000    0.023    0.006 utils.py:265(tokenize)
        4    0.000    0.000    0.000    0.000 registry.py:25(__getitem__)
        4    0.000    0.000    0.000    0.000 registry.py:182(get_filesystem_class)
        4    0.000    0.000    0.001    0.000 core.py:310(_un_chain)
        4    0.000    0.000    0.000    0.000 core.py:479(split_protocol)
        4    0.000    0.000    0.025    0.006 core.py:534(get_fs_token_paths)
        4    0.000    0.000    0.001    0.000 local.py:142(_strip_protocol)
        4    0.000    0.000    0.001    0.000 local.py:157(make_path_posix)
        4    0.000    0.000    0.000    0.000 string.py:4871(as_string_column)
        4    0.000    0.000    0.014    0.004 dataframe.py:2897(take)
        4    0.000    0.000    0.186    0.047 dataframe.py:3669(sort_values)
        4    0.000    0.000    0.185    0.046 dataframe.py:3973(merge)
        4    0.013    0.003    0.037    0.009 frame.py:2527(_get_sorted_inds)
        4    0.000    0.000    0.182    0.045 frame.py:3173(_merge)
        4    0.000    0.000    0.000    0.000 series.py:782(__len__)
        4    0.000    0.000    0.163    0.041 series.py:2179(astype)
        4    0.000    0.000    0.171    0.043 series.py:2240(argsort)
        4    0.000    0.000    0.171    0.043 series.py:2343(_sort)
        4    0.000    0.000    0.043    0.011 dlpack.py:41(to_dlpack)
        4    0.016    0.004    0.016    0.004 tensor.py:21(wrapped)
        4    0.000    0.000    0.042    0.011 __init__.py:127(init)
      4/1    0.000    0.000    0.112    0.112 collate.py:42(default_collate)
        4    0.000    0.000    0.004    0.001 join.py:15(__init__)
        4    0.005    0.001    0.145    0.036 join.py:101(perform_merge)
        4    0.000    0.000    0.000    0.000 join.py:128(preprocess_merge_params)
        4    0.000    0.000    0.003    0.001 join.py:194(validate_merge_cfg)
        4    0.000    0.000    0.001    0.000 join.py:299(typecast_input_to_libcudf)
        4    0.000    0.000    0.000    0.000 join.py:333(input_to_libcudf_casting_rules)
        4    0.000    0.000    0.000    0.000 join.py:454(<dictcomp>)
        4    0.000    0.000    0.000    0.000 join.py:443(compute_output_dtypes)
        4    0.000    0.000    0.001    0.000 join.py:498(typecast_libcudf_to_output)
        4    0.018    0.005    0.018    0.005 {method 'read' of '_io.BufferedReader' objects}
        4    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        4    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        4    0.170    0.042    0.212    0.053 {built-in method torch._C._from_dlpack}
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
      3/2    0.000    0.000    0.033    0.016 <frozen importlib._bootstrap>:978(_find_and_load)
        3    0.000    0.000    0.000    0.000 codecs.py:319(decode)
        3    0.000    0.000    0.000    0.000 msms_profiler.py:32(__len__)
        3    0.000    0.000    0.000    0.000 _collections_abc.py:252(__subclasshook__)
        3    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        3    0.000    0.000    0.000    0.000 format.py:877(_read_bytes)
        3    0.000    0.000    0.000    0.000 __init__.py:187(_checkLevel)
        3    0.000    0.000    0.000    0.000 __init__.py:1170(append)
        3    0.000    0.000    0.000    0.000 _utils.py:461(_get_device_index)
        3    0.000    0.000    0.000    0.000 _tensor_str.py:189(<listcomp>)
        3    0.000    0.000    0.021    0.007 _tensor_str.py:214(<listcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:295(get_device_properties)
        3    0.000    0.000    0.000    0.000 _utils.py:8(_get_device_index)
        3    0.000    0.000    0.040    0.013 sampler.py:113(__iter__)
        3    0.000    0.000    0.000    0.000 dataloader.py:354(_auto_collation)
        3    0.000    0.000    0.000    0.000 worker.py:83(get_worker_info)
        3    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.delattr}
        3    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        3    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        3    0.000    0.000    0.000    0.000 {built-in method torch.cuda._get_device_properties}
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:40(_relax_case)
      2/1    0.000    0.000    0.004    0.004 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:307(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:311(__enter__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:318(__exit__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:369(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:424(has_location)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:504(_init_module_attrs)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:576(module_from_spec)
      2/1    0.000    0.000    0.011    0.011 <frozen importlib._bootstrap>:663(_load_unlocked)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:719(find_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:792(find_spec)
        2    0.000    0.000    0.025    0.013 <frozen importlib._bootstrap>:882(_find_spec)
      2/1    0.000    0.000    0.033    0.033 <frozen importlib._bootstrap>:948(_find_and_load_unlocked)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:369(_get_cached)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:401(_check_name_wrapper)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:438(_classify_pyc)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:471(_validate_timestamp_pyc)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:523(_compile_bytecode)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:574(spec_from_file_location)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:719(create_module)
      2/1    0.000    0.000    0.011    0.011 <frozen importlib._bootstrap_external>:722(exec_module)
        2    0.000    0.000    0.007    0.003 <frozen importlib._bootstrap_external>:793(get_code)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:884(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:909(get_filename)
        2    0.000    0.000    0.006    0.003 <frozen importlib._bootstrap_external>:914(get_data)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:951(path_stats)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1203(_path_importer_cache)
        2    0.000    0.000    0.025    0.013 <frozen importlib._bootstrap_external>:1240(_get_spec)
        2    0.000    0.000    0.025    0.013 <frozen importlib._bootstrap_external>:1272(find_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1351(_get_spec)
        2    0.000    0.000    0.025    0.013 <frozen importlib._bootstrap_external>:1356(find_spec)
        2    0.000    0.000    0.051    0.025 genericpath.py:16(exists)
        2    0.046    0.023   56.940   28.470 msms_profiler.py:37(__getitem__)
        2    0.035    0.017   56.787   28.394 msms_profiler.py:45(read_file)
        2    0.000    0.000    0.000    0.000 contextlib.py:81(__init__)
        2    0.000    0.000    0.009    0.004 contextlib.py:107(__enter__)
        2    0.000    0.000    0.000    0.000 contextlib.py:116(__exit__)
        2    0.000    0.000    0.000    0.000 contextlib.py:237(helper)
        2    0.000    0.000    0.000    0.000 enum.py:356(__getitem__)
        2    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        2    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 _dtype.py:34(__str__)
        2    0.000    0.000    0.002    0.001 tokenize.py:374(read_or_stop)
        2    0.000    0.000    0.000    0.000 tokenize.py:380(find_cookie)
        2    0.000    0.000    0.000    0.000 __init__.py:99(CFunctionType)
        2    0.000    0.000    0.000    0.000 __init__.py:73(CFUNCTYPE)
        2    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
        2    0.000    0.000    0.000    0.000 function_base.py:244(iterable)
        2    0.000    0.000    0.000    0.000 rmm.py:96(initialize)
        2    0.000    0.000    0.000    0.000 __init__.py:716(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1600(getEffectiveLevel)
        2    0.000    0.000    0.000    0.000 blocks.py:207(array_values)
        2    0.000    0.000    0.000    0.000 driver.py:417(__bool__)
        2    0.000    0.000    0.000    0.000 driver.py:524(get_primary_context)
        2    0.000    0.000    0.000    0.000 driver.py:934(__init__)
        2    0.000    0.000    0.000    0.000 driver.py:1079(prepare_for_use)
        2    0.000    0.000    0.000    0.000 driver.py:1562(__init__)
        2    0.000    0.000    0.000    0.000 driver.py:2174(get_devptr_for_active_ctx)
        2    0.000    0.000    0.000    0.000 driver.py:2254(memory_size_from_info)
        2    0.000    0.000    0.000    0.000 {built-in method numba.mviewbuf.memoryview_get_extents_info}
        2    0.000    0.000    0.000    0.000 devices.py:36(__getitem__)
        2    0.000    0.000    0.000    0.000 devices.py:76(__getattr__)
        2    0.000    0.000    0.000    0.000 devices.py:144(_get_or_create_context_uncached)
        2    0.000    0.000    0.001    0.000 api.py:26(from_cuda_array_interface)
        2    0.000    0.000    0.000    0.000 devices.py:208(get_context)
        2    0.000    0.000    0.009    0.005 devices.py:221(_require_cuda_context)
        2    0.000    0.000    0.009    0.005 api.py:56(as_cuda_array)
        2    0.000    0.000    0.000    0.000 api.py:70(is_cuda_array)
        2    0.000    0.000    0.000    0.000 api.py:201(_prepare_shape_strides_dtype)
        2    0.000    0.000    0.000    0.000 api.py:214(_fill_stride_by_order)
        2    0.000    0.000    0.000    0.000 devicearray.py:385(nbytes)
        2    0.000    0.000    0.003    0.001 __init__.py:766(asnumpy)
        2    0.000    0.000    0.000    0.000 syncdetect.py:23(_is_allowed)
        2    0.000    0.000    0.000    0.000 syncdetect.py:32(_declare_synchronize)
        2    0.046    0.023    0.046    0.023 {built-in method cupy.core.core.array}
        2    0.003    0.001    0.003    0.001 {method 'get' of 'cupy.core.core.ndarray' objects}
        2    0.023    0.011    0.069    0.035 from_data.py:44(asarray)
        2    0.000    0.000    0.000    0.000 dtypes.py:281(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:694(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:853(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1065(construct_from_string)
        2    0.000    0.000    0.000    0.000 common.py:598(is_excluded_dtype)
        2    0.000    0.000    0.000    0.000 cast.py:1187(maybe_castable)
        2    0.000    0.000    0.000    0.000 cast.py:1595(construct_1d_ndarray_preserving_na)
        2    0.000    0.000    0.000    0.000 construction.py:520(_try_cast)
        2    0.000    0.000    0.000    0.000 numpy_.py:50(__init__)
        2    0.000    0.000    0.000    0.000 base.py:590(dtype)
        2    0.000    0.000    0.000    0.000 base.py:3838(values)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 numpy_.py:162(__init__)
        2    0.000    0.000    0.000    0.000 numpy_.py:210(__array__)
        2    0.000    0.000    0.000    0.000 numeric.py:50(__new__)
        2    0.000    0.000    0.000    0.000 series.py:574(array)
        2    0.000    0.000    0.000    0.000 series.py:750(__array__)
        2    0.020    0.010    0.020    0.010 {cudf._lib.column.make_column_from_scalar}
        2    0.000    0.000    0.000    0.000 dtypes.py:100(np_to_pa_dtype)
        2    0.001    0.001    0.001    0.001 column_accessor.py:241(<dictcomp>)
        2    0.000    0.000    0.023    0.012 column_accessor.py:221(select_by_index)
        2    0.015    0.007    0.015    0.008 {cudf._lib.replace.replace_nulls}
        2   54.057   27.029   54.381   27.191 {cudf._lib.csv.read_csv}
        2    0.017    0.009    0.018    0.009 {cudf._lib.stream_compaction.drop_duplicates}
        2    0.356    0.178    0.464    0.232 {cudf._lib.stream_compaction.apply_boolean_mask}
        2    0.000    0.000    0.010    0.005 column.py:82(data_array_view)
        2    0.000    0.000    0.082    0.041 column.py:127(to_pandas)
        2    0.000    0.000    0.079    0.039 column.py:152(values)
        2    0.004    0.002    0.691    0.345 column.py:844(isin)
        2    0.000    0.000    0.021    0.011 column.py:2078(full)
        2    0.000    0.000    0.000    0.000 ioutils.py:1039(_is_local_filesystem)
        2    0.000    0.000    0.024    0.012 ioutils.py:1043(ensure_single_filepath_or_buffer)
        2    0.000    0.000    0.051    0.026 ioutils.py:1090(get_filepath_or_buffer)
        2    0.029    0.015    0.029    0.015 {cudf._lib.unary.cast}
        2    0.000    0.000    0.000    0.000 string.py:205(__init__)
        2    0.021    0.011    0.033    0.017 string.py:3995(character_tokenize)
        2    0.014    0.007    0.015    0.007 {cudf._lib.string_casting.stol}
        2    0.011    0.006    0.012    0.006 {cudf._lib.nvtext.tokenize.character_tokenize}
        2    0.027    0.013    0.027    0.013 {cudf._lib.strings.char_types.is_integer}
        2    0.012    0.006    0.027    0.013 numerical.py:417(fillna)
        2    0.008    0.004    0.158    0.079 dataframe.py:1034(astype)
        2    0.000    0.000    0.000    0.000 dataframe.py:2329(iloc)
        2    0.000    0.000    0.032    0.016 dataframe.py:3216(drop_duplicates)
        2    0.000    0.000    0.009    0.005 dataframe.py:4097(join)
        2    0.000    0.000    0.039    0.020 dataframe.py:6805(to_dlpack)
        2    0.000    0.000    0.000    0.000 frame.py:44(_mimic_inplace)
        2    0.000    0.000    0.028    0.014 frame.py:497(_get_columns_by_index)
        2    0.000    0.000    0.482    0.241 frame.py:1482(_apply_boolean_mask)
        2    0.000    0.000    0.000    0.000 frame.py:2090(<listcomp>)
        2    0.012    0.006    0.032    0.016 frame.py:2057(drop_duplicates)
        2    0.000    0.000    0.004    0.002 index.py:488(take)
        2    0.000    0.000    0.083    0.041 index.py:582(to_pandas)
        2    0.000    0.000    0.004    0.002 index.py:1621(__getitem__)
        2    0.000    0.000    0.022    0.011 indexing.py:17(indices_from_labels)
        2    0.000    0.000    0.000    0.000 index.py:1891(copy)
        2    0.000    0.000    0.000    0.000 index.py:1998(dtype)
        2    0.000    0.000    0.000    0.000 indexing.py:69(__init__)
        2    0.000    0.000    0.021    0.011 indexing.py:72(__getitem__)
        2    0.000    0.000    0.000    0.000 indexing.py:113(__init__)
        2    0.000    0.000    0.053    0.026 indexing.py:116(__getitem__)
        2    0.000    0.000    0.031    0.016 indexing.py:131(_loc_to_iloc)
        2    0.000    0.000    0.271    0.135 indexing.py:166(__getitem__)
        2    0.000    0.000    0.000    0.000 indexing.py:188(_can_downcast_to_series)
        2    0.000    0.000    0.000    0.000 indexing.py:384(__init__)
        2    0.000    0.000    0.269    0.135 indexing.py:387(_getitem_tuple_arg)
        2    0.000    0.000    0.051    0.026 indexing.py:453(_get_column_selection)
        2    0.000    0.000    0.053    0.026 series.py:915(__getitem__)
        2    0.000    0.000    0.000    0.000 series.py:1708(str)
        2    0.000    0.000    0.000    0.000 series.py:1784(null_count)
        2    0.000    0.000    0.000    0.000 series.py:2142(loc)
        2    0.000    0.000    0.000    0.000 series.py:2153(iloc)
        2    0.000    0.000    0.691    0.346 series.py:3652(isin)
        2    0.000    0.000    0.003    0.002 series.py:4192(to_dlpack)
        2    0.000    0.000   54.457   27.228 csv.py:13(read_csv)
        2    0.000    0.000    0.000    0.000 pandas_compat.py:614(get_datetimetz_type)
        2    0.003    0.002    0.003    0.002 {built-in method from_numpy}
        2    0.012    0.006    0.012    0.006 {built-in method ceil}
        2    0.106    0.053    0.106    0.053 {built-in method empty}
        2    0.119    0.059    0.119    0.059 {built-in method isfinite}
        2    0.055    0.027    0.055    0.027 {built-in method masked_select}
        2    0.000    0.000    0.032    0.016 _tensor_str.py:275(<listcomp>)
        2    0.000    0.000    0.000    0.000 __init__.py:278(get_device_capability)
        2    0.000    0.000    0.000    0.000 overrides.py:1070(has_torch_function)
        2    0.000    0.000    0.000    0.000 sampler.py:106(num_samples)
        2    0.000    0.000    0.040    0.020 sampler.py:225(__iter__)
        2    0.000    0.000    0.040    0.020 dataloader.py:426(_next_index)
        2    0.000    0.000   57.092   28.546 dataloader.py:432(__next__)
        2    0.001    0.000   57.092   28.546 dataloader.py:473(_next_data)
        2    0.000    0.000    0.000    0.000 collate.py:80(<genexpr>)
        2    0.000    0.000    0.000    0.000 join.py:169(<listcomp>)
        2    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
        2    0.002    0.001    0.002    0.001 {method 'readline' of '_io.BufferedReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        2    0.006    0.003    0.006    0.003 {method 'read' of '_io.FileIO' objects}
        2    0.035    0.018    0.035    0.018 {built-in method io.open}
        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method marshal.loads}
        2    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        2    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
      2/1    0.000    0.000    0.004    0.004 {built-in method builtins.exec}
        2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._is_torch_function_enabled}
        2    0.077    0.039    0.077    0.039 {method 'int' of 'torch._C._TensorBase' objects}
        2    0.026    0.013    0.026    0.013 {method 'to' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    0.000    0.000 {method 'abs' of 'torch._C._TensorBase' objects}
        2    0.005    0.003    0.005    0.003 {method 'max' of 'torch._C._TensorBase' objects}
        2    0.034    0.017    0.034    0.017 {method 'min' of 'torch._C._TensorBase' objects}
        2    0.010    0.005    0.010    0.005 {method 'ne' of 'torch._C._TensorBase' objects}
        2    0.128    0.064    0.128    0.064 {method 'random_' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _struct.calcsize}
        1    0.000    0.000    0.000    0.000 {built-in method _struct.unpack}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:194(_lock_unlock_module)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:929(_sanity_check)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:994(_gcd_import)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:98(_path_isdir)
        1    0.000    0.000    0.072    0.072 msms_profiler.py:21(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1190(_path_hooks)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1319(__init__)
        1    0.000    0.000    0.003    0.003 <frozen importlib._bootstrap_external>:1404(_fill_cache)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1445(path_hook_for_FileFinder)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
        1    0.000    0.000    0.000    0.000 {built-in method pickle5._pickle.load}
        1    0.000    0.000    0.000    0.000 __init__.py:109(import_module)
        1    0.000    0.000    0.003    0.003 warnings.py:20(_showwarnmsg_impl)
        1    0.000    0.000    0.002    0.002 warnings.py:35(_formatwarnmsg_impl)
        1    0.000    0.000    0.003    0.003 warnings.py:96(_showwarnmsg)
        1    0.000    0.000    0.002    0.002 warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.000    0.000 warnings.py:415(__init__)
        1    0.007    0.007   57.921   57.921 msms_profiler.py:71(main)
        1    0.000    0.000    0.000    0.000 contextlib.py:376(_exit_wrapper)
        1    0.000    0.000    0.000    0.000 contextlib.py:374(_create_exit_wrapper)
        1    0.000    0.000    0.000    0.000 contextlib.py:387(__init__)
        1    0.000    0.000    0.000    0.000 contextlib.py:417(enter_context)
        1    0.000    0.000    0.000    0.000 contextlib.py:456(_push_cm_exit)
        1    0.000    0.000    0.000    0.000 contextlib.py:462(_push_exit_callback)
        1    0.000    0.000    0.000    0.000 contextlib.py:478(__enter__)
        1    0.000    0.000    0.000    0.000 contextlib.py:481(__exit__)
        1    0.000    0.000    0.000    0.000 sre_compile.py:432(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2337(all)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
        1    0.000    0.000    0.000    0.000 ast.py:30(parse)
        1    0.000    0.000    0.000    0.000 ast.py:38(literal_eval)
        1    0.000    0.000    0.002    0.002 linecache.py:15(getline)
        1    0.000    0.000    0.002    0.002 linecache.py:37(getlines)
        1    0.000    0.000    0.002    0.002 linecache.py:82(updatecache)
        1    0.000    0.000    0.000    0.000 tokenize.py:219(__init__)
        1    0.000    0.000    0.000    0.000 tokenize.py:238(untokenize)
        1    0.000    0.000    0.000    0.000 tokenize.py:312(untokenize)
        1    0.000    0.000    0.002    0.002 tokenize.py:350(detect_encoding)
        1    0.000    0.000    0.002    0.002 tokenize.py:443(open)
        1    0.000    0.000    0.000    0.000 tokenize.py:672(generate_tokens)
        1    0.000    0.000    0.000    0.000 utils.py:962(safe_eval)
        1    0.000    0.000    0.072    0.072 npyio.py:283(load)
        1    0.000    0.000    0.000    0.000 format.py:217(read_magic)
        1    0.000    0.000    0.000    0.000 format.py:190(_check_version)
        1    0.000    0.000    0.000    0.000 format.py:282(descr_to_dtype)
        1    0.000    0.000    0.018    0.018 format.py:523(_filter_header)
        1    0.000    0.000    0.000    0.000 format.py:597(<listcomp>)
        1    0.000    0.000    0.018    0.018 format.py:558(_read_array_header)
        1    0.000    0.000    0.019    0.019 format.py:683(read_array)
        1    0.000    0.000    0.000    0.000 __init__.py:783(_addHandlerRef)
        1    0.000    0.000    0.000    0.000 __init__.py:802(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1216(getLogger)
        1    0.000    0.000    0.000    0.000 __init__.py:1267(_fixupParents)
        1    0.000    0.000    0.000    0.000 __init__.py:1304(_clear_cache)
        1    0.000    0.000    0.000    0.000 __init__.py:1336(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1349(setLevel)
        1    0.000    0.000    0.000    0.000 __init__.py:1368(info)
        1    0.000    0.000    0.000    0.000 __init__.py:1526(addHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:1548(hasHandlers)
        1    0.000    0.000    0.000    0.000 __init__.py:1928(getLogger)
        1    0.000    0.000    0.000    0.000 __init__.py:2073(createLock)
        1    0.000    0.000    0.000    0.000 utils.py:325(__setitem__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 driver.py:54(make_logger)
        1    0.000    0.000    0.000    0.000 driver.py:189(_getpid)
        1    0.000    0.000    0.006    0.006 driver.py:231(initialize)
        1    0.001    0.001    0.001    0.001 driver.py:248(_initialize_extras)
        1    0.000    0.000    0.000    0.000 driver.py:346(get_device_count)
        1    0.000    0.000    0.000    0.000 driver.py:339(get_device)
        1    0.000    0.000    0.000    0.000 driver.py:461(__init__)
        1    0.000    0.000    0.000    0.000 driver.py:560(met_requirement_for_device)
        1    0.000    0.000    0.000    0.000 driver.py:569(__init__)
        1    0.000    0.000    0.000    0.000 driver.py:699(__init__)
        1    0.000    0.000    0.000    0.000 driver.py:874(_ensure_memory_manager)
        1    0.000    0.000    0.000    0.000 driver.py:1015(__init__)
        1    0.000    0.000    0.000    0.000 devices.py:27(<listcomp>)
        1    0.000    0.000    0.000    0.000 devices.py:21(__getattr__)
        1    0.000    0.000    0.000    0.000 devices.py:73(__init__)
        1    0.000    0.000    0.000    0.000 spec.py:104(__init__)
        1    0.000    0.000    0.000    0.000 dircache.py:27(__init__)
        1    0.000    0.000    0.000    0.000 registry.py:44(register_implementation)
        1    0.000    0.000    0.000    0.000 registry.py:212(_import_class)
        1    0.000    0.000    0.000    0.000 local.py:27(__init__)
        1    0.031    0.031    0.031    0.031 {built-in method randperm}
        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:59(_check_capability)
        1    0.018    0.018    0.018    0.018 __init__.py:96(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:100(<listcomp>)
        1    0.000    0.000    0.018    0.018 __init__.py:85(_check_cubins)
        1    0.000    0.000    0.000    0.000 __init__.py:266(get_device_name)
        1    0.000    0.000    0.000    0.000 __init__.py:345(get_arch_list)
        1    0.000    0.000    0.002    0.002 graph_module.py:24(patched_getline)
        1    0.000    0.000    0.000    0.000 sampler.py:87(__init__)
        1    0.000    0.000    0.000    0.000 dataloader.py:45(create_fetcher)
        1    0.000    0.000    0.000    0.000 sampler.py:210(__init__)
        1    0.000    0.000    0.000    0.000 dataloader.py:154(__init__)
        1    0.000    0.000    0.324    0.324 dataloader.py:290(_get_iterator)
        1    0.000    0.000    0.000    0.000 dataloader.py:300(multiprocessing_context)
        1    0.000    0.000    0.324    0.324 dataloader.py:339(__iter__)
        1    0.000    0.000    0.000    0.000 dataloader.py:358(_index_sampler)
        1    0.000    0.000    0.324    0.324 dataloader.py:401(__init__)
        1    0.000    0.000    0.324    0.324 dataloader.py:465(__init__)
        1    0.000    0.000    0.112    0.112 collate.py:83(<listcomp>)
        1    0.000    0.000    0.000    0.000 fetch.py:8(__init__)
        1    0.000    0.000    0.000    0.000 fetch.py:39(__init__)
        1    0.000    0.000   56.940   56.940 fetch.py:44(<listcomp>)
        1    0.000    0.000   57.052   57.052 fetch.py:42(fetch)
        1    0.000    0.000    0.004    0.004 __init__.py:3(<module>)
        1    0.000    0.000    0.000    0.000 join.py:14(Merge)
        1    0.000    0.000    0.000    0.000 join.py:2(<module>)
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_io._IOBase' objects}
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
        1    0.000    0.000    0.000    0.000 {method 'readlines' of '_io._IOBase' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
        1    0.003    0.003    0.003    0.003 {built-in method posix.listdir}
        1    0.000    0.000    0.000    0.000 {built-in method sys.exc_info}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.022    0.022    0.022    0.022 {built-in method torch._C._cuda_init}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getArchFlags}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getCompiledVersion}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._log_api_usage_once}


